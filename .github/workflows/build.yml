name: Build CEC Flipper Control

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-flipper-momentum:
    runs-on: ubuntu-latest
    name: Build Flipper Zero App (Momentum)
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup ufbt for Momentum
      run: |
        pip3 install --upgrade ufbt
        ufbt update --index-url=https://up.unleashedflip.com/directory.json --channel=dev
    
    - name: Build Flipper Application
      run: |
        cd flipper
        ufbt build
        
    - name: List build output (debug)
      run: |
        echo "Contents of flipper directory:"
        ls -la flipper/
        echo "Looking for .fap files:"
        find flipper/ -name "*.fap" -type f
        echo "Looking for dist directory:"
        find flipper/ -name "dist" -type d
        
    - name: Create dist directory and copy fap
      run: |
        cd flipper
        mkdir -p dist
        # Find the .fap file wherever it is and copy to dist
        find . -name "*.fap" -type f -exec cp {} dist/ \;
        ls -la dist/
    
    - name: Upload app artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cec-remote-flipper-app-momentum
        path: flipper/dist/*.fap
        retention-days: 30
    
    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: flipper/dist/*.fap
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-rpi:
    runs-on: ubuntu-latest
    name: Test RPi Components
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyserial
    
    - name: Test Python files
      run: |
        cd rpi
        python -m py_compile cec_control.py
        python -m py_compile main.py
